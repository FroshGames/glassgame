 private void loadPlatformConfig() {
        File configFile = new File(getDataFolder(), "platforms.yml");
        if (!configFile.exists()) {
            saveResource("platforms.yml", false);
        }

        FileConfiguration config = YamlConfiguration.loadConfiguration(configFile);

        config.getMapList("platforms").forEach(platform -> {
            if (platform instanceof Map) {
                Map<String, Object> platformMap = (Map<String, Object>) platform;
                String type = (String) platformMap.get("type");
                Map<String, Object> coordinates = (Map<String, Object>) platformMap.get("coordinates");
                int x = (int) coordinates.get("x");
                int y = (int) coordinates.get("y");
                int z = (int) coordinates.get("z");

                Location location = new Location(Bukkit.getWorld("world"), x, y, z);

                if ("safe".equalsIgnoreCase(type)) {
                    safePlatforms.add(location);
                } else if ("fake".equalsIgnoreCase(type)) {
                    fakePlatforms.add(location);
                }
            }
        });
    }

    @EventHandler
    public void onPlayerMove(PlayerMoveEvent event) {
        Player player = event.getPlayer();
        Location playerLocation = player.getLocation();
        Block block = playerLocation.getBlock();

        if (block.getType() == Material.TINTED_GLASS && player.getGameMode() == GameMode.ADVENTURE) {
            if (fakePlatforms.contains(playerLocation)) {
                // Remove the 3x3 area of tinted glass blocks
                for (int x = -1; x <= 1; x++) {
                    for (int y = -1; y <= 1; y++) {
                        for (int z = -1; z <= 1; z++) {
                            Block adjacentBlock = block.getRelative(x, y, z);
                            if (adjacentBlock.getType() == Material.TINTED_GLASS) {
                                adjacentBlock.setType(Material.AIR);
                            }
                        }
                    }
                }
            }
        }
    }

loadPlatformConfig();